# Generated by Django 3.0.3 on 2020-06-25 03:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('attendanceid', models.AutoField(primary_key=True, serialize=False)),
                ('attended', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'attendance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('branchid', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('bname', models.CharField(max_length=35)),
                ('capacity', models.IntegerField()),
            ],
            options={
                'db_table': 'branch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('classid_ai', models.AutoField(primary_key=True, serialize=False)),
                ('classid', models.CharField(blank=True, max_length=7, null=True, unique=True)),
                ('batch', models.TextField()),
                ('section', models.CharField(blank=True, max_length=1, null=True)),
                ('labgroup', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'class',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClassCourse',
            fields=[
                ('classcourseid', models.AutoField(primary_key=True, serialize=False)),
                ('ac_year', models.TextField(blank=True, null=True)),
                ('sem', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'class_course',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('courseid', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('cname', models.CharField(max_length=100)),
                ('credit', models.IntegerField()),
            ],
            options={
                'db_table': 'course',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('enrollid', models.AutoField(primary_key=True, serialize=False)),
                ('ac_year', models.TextField(blank=True, null=True)),
                ('sem', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enrollment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('examid', models.AutoField(primary_key=True, serialize=False)),
                ('examtype', models.CharField(max_length=6)),
                ('edate', models.DateField(blank=True, null=True)),
                ('total', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'exam',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('lectureid', models.AutoField(primary_key=True, serialize=False)),
                ('timedate', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lecture',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'student_class',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentClasscourse',
            fields=[
                ('studentid', models.OneToOneField(db_column='studentid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='accounts.Student')),
            ],
            options={
                'db_table': 'student_classcourse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.PositiveIntegerField(blank=True, null=True)),
                ('starttime', models.TimeField(blank=True, null=True)),
                ('endtime', models.TimeField(blank=True, null=True)),
                ('room', models.CharField(blank=True, max_length=4, null=True)),
            ],
            options={
                'db_table': 'timetable',
                'managed': False,
            },
        ),
        migrations.AlterModelTable(
            name='faculty',
            table='faculty',
        ),
        migrations.AlterModelTable(
            name='student',
            table='student',
        ),
        migrations.AlterModelTable(
            name='user',
            table='user',
        ),
        migrations.CreateModel(
            name='BranchCourse',
            fields=[
                ('branchid', models.OneToOneField(db_column='branchid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='accounts.Branch')),
            ],
            options={
                'db_table': 'branch_course',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Marks',
            fields=[
                ('examid', models.OneToOneField(db_column='examid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='accounts.Exam')),
                ('obtained', models.IntegerField()),
            ],
            options={
                'db_table': 'marks',
                'managed': False,
            },
        ),
    ]
